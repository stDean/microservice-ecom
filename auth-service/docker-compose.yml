services:
  auth_service:
    build:
      context: .
    image: auth_service_image:1.0
    container_name: auth_service
    ports:
      - "3001:3001"
    networks:
      - auth-net
    depends_on:
      - auth_migrate
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (r) => {if(r.statusCode !== 200) throw new Error()})"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  auth_migrate:
    build: 
      context: .
      args:
        - NODE_ENV=development
      target: development
      command: ["npm", "run", "db:push"]
      networks:
        - auth-net
      depends_on:
        db: 
          condition: service_healthy

  db:
    image: postgres
    restart: always
    shm_size: 128mb
    networks:
      - auth-net
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_USER: user
      POSTGRES_DB: auth_db
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 10s
      retries: 5

networks:
  auth-net:
    driver: bridge

volumes:
  db-data:
