# Extend the base configuration file
services:
  # --- API Gateway Development Overrides ---
  api-gateway:
    # Use the builder target for development
    build:
      target: builder
    environment:
      - NODE_ENV=development
      - JWT_SECRET=dev-jwt-secret-change-in-production
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost:5173,http://localhost:3002
      - PORT=3000
      - AUTH_SERVICE_URL=http://auth-service:3001
      - NOTIFICATION_SERVICE_URL=http://notification-service:3002
      - USER_SERVICE_URL=http://user-service:3003
    # Mount volumes for hot-reloading
    volumes:
      - ./api-gateway:/app
      - /app/node_modules
    command: npm run dev

  # --- Auth Service Development Overrides ---
  auth-service:
    # Use the builder target for development
    build: 
      target: builder
      args:
        - NODE_ENV=development
    environment:
      PORT: 3001
      NODE_ENV: development
      # Easy-to-use development credentials
      POSTGRES_PASSWORD: example
      POSTGRES_USER: user
      POSTGRES_DB: auth_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-jwt-secret-change-in-production
    # Mount volumes for hot-reloading
    volumes:
      - ./auth-service/src:/app/src:ro
      - ./auth-service/package.json:/app/package.json:ro
      - ./auth-service/tsconfig.json:/app/tsconfig.json:ro
      - /app/node_modules
    command: ["npm", "run", "dev"]
    # We remove the healthcheck here as it often gets in the way of rapid development restarts

  # --- Database Development Overrides ---
  auth-db:
    environment:
      # Matches the development credentials set above
      POSTGRES_PASSWORD: example
      POSTGRES_USER: user
      POSTGRES_DB: auth_db
    # Add a volume for persistent dev data
    volumes:
      - auth_db_data:/var/lib/postgresql/data

  # --- Notification Development Overrides ---
  notification-service:
    build: 
      target: builder
      args:
        - NODE_ENV=development
    environment:
      - PORT=3002
      - NODE_ENV=development
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - MAIL_HOST=mailhog
      - MAIL_PORT=1025
      - MAIL_SECURE=false
      - MAIL_USER=
      - MAIL_PASS=
      - FRONTEND_URL=http://localhost:3000
      - LOG_LEVEL=debug
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./notification-service/src:/app/src:ro 
      - ./notification-service/package.json:/app/package.json:ro
      - ./notification-service/tsconfig.json:/app/tsconfig.json:ro
      - /app/node_modules
    command: ["npm", "run", "dev"]
    depends_on:
      - mailhog
      - rabbitmq

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025" # SMTP server port
      - "8025:8025" # Web UI port
    networks:
      - ecom_network

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # AMQP protocol port
      - "15672:15672" # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - ecom_network

 # --- User Service Development Overrides ---
  user-service:
    build:
      target: builder
      args:
        - NODE_ENV=development
    environment:
      - PORT=3003
      - MONGO_USER=root
      - MONGO_PASSWORD=example
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./user-service/src:/app/src:ro
      - ./user-service/package.json:/app/package.json:ro
      - ./user-service/tsconfig.json:/app/tsconfig.json:ro
      - /app/node_modules
    command: ["npm", "run", "dev"]
    depends_on:
      - user-db
    
  user-db:
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - user_db_data:/data/db

# Define volumes for persistent data
volumes:
  auth_db_data:
  user_db_data:

